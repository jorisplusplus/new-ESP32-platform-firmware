#/usr/bin/python
# Author: Joris Witteman 2020
# This script takes module names and turns it into a header file usable for uPy 

import argparse

parser = argparse.ArgumentParser(description='Process some integers.')
parser.add_argument('modules', metavar='N', nargs='+',
                    help='list of modules')
parser.add_argument('-b', help='folder to store header file')

args = parser.parse_args()
modules = args.modules[0].split("^")

inits = ""
for mod in list(dict.fromkeys(modules)):    #remove any duplicates
    if mod is not None and mod != "":
        mod = mod.strip()       #removing trailing/leading whitespaces
        names = mod.split("@")  #split the string
        name = names[0]         #Copy module name as first argument
        message = name          #Set init message to the same
        if len(names) > 1:
            message = names[1]  #update init message if custom message was specified
        inits += "INIT_DRIVER({}, \"{}\")\n".format(name, message)

f = open(args.b+"/platform_gen.c", "w")

f.write("""//This file is generated by platform_generator.py
#include "include/platform_gen.h"

void platform_gen_init( void ) {{
    {}
    }}
""".format(inits))